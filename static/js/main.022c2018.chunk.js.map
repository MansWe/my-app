{"version":3,"sources":["components/headerName.js","components/TechStack.js","App.js","serviceWorker.js","index.js","img/Me.png"],"names":["ReactRotatingText","require","library","add","faFacebookF","faLinkedin","faGithub","Myheader","props","LogoWithBorder","styled","div","ProfilePictureImg","img","Text","h1","MyMediaListUL","ul","MyMediaListLI","li","MyATag","a","className","src","alt","items","style","color","href","target","icon","height","width","faJava","faJs","faReact","faHtml5","faCss3","faNode","faKeybase","TechStack","useState","CurrentStack","setCurrentStack","SortElement","HeaderStack","h5","StackUL","ListItem","item","Paragraph","p","FakeComponent","returnText","onMouseEnter","onMouseLeave","App","OrganizeComponents","FixFooter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"64CAgBA,IAAIA,EAAoBC,EAAQ,IAEhCC,IAAQC,IAAIC,IAAaC,IAAYC,KAErC,IA2FeC,EA3FE,SAAAC,GACf,IAAMC,EAAiBC,IAAOC,IAAV,KAOdC,EAAoBF,IAAOG,IAAV,KAgBjBC,EAAOJ,IAAOK,GAAV,KAUJC,EAAgBN,IAAOO,GAAV,KAObC,EAAgBR,IAAOS,GAAV,KAKbC,EAASV,IAAOW,EAAV,KAQZ,OACE,kBAACZ,EAAD,KACE,kBAACG,EAAD,CAAmBU,UAAU,GAAGC,IAAKV,IAAKW,IAAI,UAC9C,kBAACV,EAAD,wBACA,kBAACd,EAAD,CACEyB,MAAO,CAAC,aAAc,gBAAiB,aACvCC,MAAO,CACLC,MAAO,WAGX,kBAACX,EAAD,KACE,kBAACE,EAAD,KACE,kBAACE,EAAD,CAAQQ,KAAK,4BAA4BC,OAAO,UAC9C,kBAAC,IAAD,CACEC,KAAM,CAAC,MAAO,UACdJ,MAAO,CAAEK,OAAQ,OAAQC,MAAO,QAChCR,IAAI,aAKV,kBAACN,EAAD,KACE,kBAACE,EAAD,CACEQ,KAAK,2DACLC,OAAO,UAEP,kBAAC,IAAD,CACEC,KAAM,CAAC,MAAO,YACdJ,MAAO,CAAEK,OAAQ,OAAQC,MAAO,QAChCR,IAAI,kB,oxCCnFMvB,EAAQ,IAEhCC,IAAQC,IACNC,IACAC,IACAC,IACA2B,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGF,IA8JeC,EA9JG,SAAAhC,GAAS,MAEeiC,mBAAS,wBAFxB,mBAElBC,EAFkB,KAEJC,EAFI,KAKnBC,EAAclC,IAAOC,IAAV,KAUXkC,EAAcnC,IAAOoC,GAAV,KAMXC,EAAUrC,IAAOO,GAAV,KASP+B,EAAWtC,IAAOS,GAAV,KAQD,SAAAX,GAAK,MAAmB,QAAdA,EAAMyC,KAAiB,MAAQ,MACzC,SAAAzC,GAAK,MAAmB,MAAdA,EAAMyC,KAAe,UAAY,MAC3C,SAAAzC,GAAK,MAAmB,SAAdA,EAAMyC,KAAkB,UAAY,MAC9C,SAAAzC,GAAK,MAAmB,QAAdA,EAAMyC,KAAiB,UAAY,MAC7C,SAAAzC,GAAK,MAAmB,QAAdA,EAAMyC,KAAiB,UAAY,MAC7C,SAAAzC,GAAK,MAAmB,OAAdA,EAAMyC,KAAgB,UAAY,MAGnDC,EAAYxC,IAAOyC,EAAV,KAaTC,EAAgB1C,IAAOC,IAAV,KACf0C,EAAa,GAsBjB,MArBqB,SAAjBX,IACFW,EAAU,6LAIS,iBAAjBX,GAAoD,KAAjBA,IACrCW,EAAU,IAIO,eAAjBX,GACiB,UAAjBA,GACiB,YAAjBA,GACiB,SAAjBA,GACiB,QAAjBA,IAEAW,EAAU,oMAMV,kBAACT,EAAD,KACE,kBAACC,EAAD,KAAcH,GAEd,kBAACK,EAAD,KACE,kBAACC,EAAD,CACEC,KAAK,OACLK,aAAc,kBAAMX,EAAgB,SACpCY,aAAc,kBAAMZ,EAAgB,kBAEnC,IACD,kBAAC,IAAD,CACEb,KAAM,CAAC,MAAO,QACdJ,MAAO,CAAEK,OAAQ,OAAQC,MAAO,WAGpC,kBAACgB,EAAD,CACEC,KAAK,KACLK,aAAc,kBAAMX,EAAgB,eACpCY,aAAc,kBAAMZ,EAAgB,kBAEnC,IACD,kBAAC,IAAD,CACEb,KAAM,CAAC,MAAO,MACdJ,MAAO,CAAEK,OAAQ,OAAQC,MAAO,WAGpC,kBAACgB,EAAD,CACEC,KAAK,QACLK,aAAc,kBAAMX,EAAgB,UACpCY,aAAc,kBAAMZ,EAAgB,kBAEnC,IACD,kBAAC,IAAD,CACEb,KAAM,CAAC,MAAO,SACdJ,MAAO,CAAEK,OAAQ,OAAQC,MAAO,WAGpC,kBAACgB,EAAD,CACEC,KAAK,OACLK,aAAc,kBAAMX,EAAgB,YACpCY,aAAc,kBAAMZ,EAAgB,kBAEpC,kBAAC,IAAD,CACEb,KAAM,CAAC,MAAO,QACdJ,MAAO,CAAEK,OAAQ,OAAQC,MAAO,WAIpC,kBAACgB,EAAD,CACEC,KAAK,OACLK,aAAc,kBAAMX,EAAgB,SACpCY,aAAc,kBAAMZ,EAAgB,kBAEnC,IACD,kBAAC,IAAD,CACEb,KAAM,CAAC,MAAO,SACdJ,MAAO,CAAEK,OAAQ,OAAQC,MAAO,WAGpC,kBAACgB,EAAD,CACEC,KAAK,MACLK,aAAc,kBAAMX,EAAgB,QACpCY,aAAc,kBAAMZ,EAAgB,kBAEpC,kBAAC,IAAD,CACEb,KAAM,CAAC,MAAO,QACdJ,MAAO,CAAEK,OAAQ,OAAQC,MAAO,YAItC,kBAACkB,EAAD,KAAYG,GACZ,kBAACD,EAAD,Q,ySCrLN,IAyBeI,EAzBH,SAAAhD,GACV,IAAIiD,EAAqB/C,IAAOC,IAAV,KAChB+C,EAAYhD,IAAOC,IAAV,KAWf,OACE,6BACE,kBAAC8C,EAAD,KACE,kBAAC,EAAD,MACA,kBAACC,EAAD,KACE,kBAAC,EAAD,UCdUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBEzI5BC,EAAOC,QAAU,IAA0B,gC","file":"static/js/main.022c2018.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport img from \"../img/Me.png\";\n\nimport { default as Router, Route } from \"react-router\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebookF,\n  faLinkedin,\n  faGithub\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { whileStatement } from \"@babel/types\";\n\nimport \"../index.css\";\nvar ReactRotatingText = require(\"react-rotating-text\");\n\nlibrary.add(faFacebookF, faLinkedin, faGithub);\n\nconst Myheader = props => {\n  const LogoWithBorder = styled.div`\n    text-align: center;\n    padding-left: 30%;\n    padding-right: 30%;\n    padding-top: 10%;\n  `;\n\n  const ProfilePictureImg = styled.img`\n    width: 200px;\n    filter: grayscale(100%);\n    border-radius: 50%;\n    padding: 10px;\n    padding-bottom: 20px;\n    text-decoration: none;\n\n    &:hover {\n      filter: none;\n    }\n    @media (max-width: 768px) {\n      width: 150px;\n    }\n  `;\n\n  const Text = styled.h1`\n    font-size: 70px;\n    text-align: center;\n    color: white;\n    padding-bottom: 20px;\n    @media (max-width: 768px) {\n      font-size: 31px;\n    }\n  `;\n\n  const MyMediaListUL = styled.ul`\n    margin: 0;\n    padding: 0;\n    padding-top: 50px;\n    overflow: hidden;\n    list-style-type: none;\n  `;\n  const MyMediaListLI = styled.li`\n    display: inline;\n    padding: 10%;\n  `;\n\n  const MyATag = styled.a`\n    color: grey;\n\n    &:hover {\n      color: white;\n    }\n  `;\n\n  return (\n    <LogoWithBorder>\n      <ProfilePictureImg className=\"\" src={img} alt=\"Image\"></ProfilePictureImg>\n      <Text>MÃ¥ns Wenning</Text>\n      <ReactRotatingText\n        items={[\"Minimalist\", \"Web Developer\", \"Tech-geek\"]}\n        style={{\n          color: \"white\"\n        }}\n      />\n      <MyMediaListUL>\n        <MyMediaListLI>\n          <MyATag href=\"https://github.com/MansWe\" target=\"_blank\">\n            <FontAwesomeIcon\n              icon={[\"fab\", \"github\"]}\n              style={{ height: \"30px\", width: \"30px\" }}\n              alt=\"Github\"\n            />\n          </MyATag>\n        </MyMediaListLI>\n\n        <MyMediaListLI>\n          <MyATag\n            href=\"https://www.linkedin.com/in/m%C3%A5ns-wenning-b6b82417a/\"\n            target=\"_blank\"\n          >\n            <FontAwesomeIcon\n              icon={[\"fab\", \"linkedin\"]}\n              style={{ height: \"30px\", width: \"30px\" }}\n              alt=\"linkedIn\"\n            />\n          </MyATag>\n        </MyMediaListLI>\n      </MyMediaListUL>\n    </LogoWithBorder>\n  );\n};\nexport default Myheader;\n","import React, { Component, useState } from \"react\";\nimport styled from \"styled-components\";\nimport img from \"../img/Me.png\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebookF,\n  faLinkedin,\n  faGithub,\n  faJava,\n  faJs,\n  faReact,\n  faHtml5,\n  faCss3,\n  faNode,\n  faKeybase\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { whileStatement } from \"@babel/types\";\n\nvar ReactRotatingText = require(\"react-rotating-text\");\n\nlibrary.add(\n  faFacebookF,\n  faLinkedin,\n  faGithub,\n  faJava,\n  faJs,\n  faReact,\n  faHtml5,\n  faCss3,\n  faNode,\n  faKeybase\n);\n\nconst TechStack = props => {\n  //Hook for handling which stack has been selected by user\n  const [CurrentStack, setCurrentStack] = useState(\"Technologies (hover)\");\n  // /Hook\n\n  const SortElement = styled.div`\n    text-align: center;\n    padding-top: 20%;\n    @media (max-width: 1500px) {\n      padding-top: 5%;\n    }\n    @media (max-width: 768px) {\n      padding-top: 20%;\n    }\n  `;\n  const HeaderStack = styled.h5`\n    color: grey;\n    padding-bottom: 20px;\n    text-decoration: underline;\n  `;\n\n  const StackUL = styled.ul`\n    list-style-type: none;\n    padding-left: 0px;\n    display: inline;\n    @media (max-width: 768px) {\n      padding-top: 500px;\n    }\n  `;\n\n  const ListItem = styled.li`\n    display: inline;\n    padding: 20px;\n\n    @media (max-width: 768px) {\n      display: block;\n    }\n    &:hover {\n      color: ${props => (props.item == \"java\" ? \"red\" : \"\")};\n      color: ${props => (props.item == \"js\" ? \"#F0DB4F\" : \"\")};\n      color: ${props => (props.item == \"react\" ? \"#61dbfb\" : \"\")};\n      color: ${props => (props.item == \"node\" ? \"#68A063\" : \"\")};\n      color: ${props => (props.item == \"html\" ? \"#E44D26\" : \"\")};\n      color: ${props => (props.item == \"css\" ? \"#264de4\" : \"\")};\n    }\n  `;\n  const Paragraph = styled.p`\n    font-size: 15px;\n    color: grey;\n    left: 30%;\n    right: 30%;\n    padding-top: 5px;\n    text-align: center;\n\n    @media (max-width: 768px) {\n      padding-right: 20px;\n      padding-left: 20px;\n    }\n  `;\n  const FakeComponent = styled.div``;\n  let returnText = \"\";\n  if (CurrentStack === \"Java\") {\n    returnText = `\n        Helped two of Hitta.se's biggest customers get all of their offices on\n        Hitta, scraped with Java and Jsoup. The scraping was automated in Jenkins and runs every month.`;\n  }\n  if (CurrentStack === \"Technologies\" || CurrentStack === \"\") {\n    returnText = ``;\n  }\n\n  if (\n    CurrentStack === \"Javascript\" ||\n    CurrentStack === \"React\" ||\n    CurrentStack === \"Node.js\" ||\n    CurrentStack === \"HTML\" ||\n    CurrentStack === \"CSS\"\n  ) {\n    returnText = `Built a large scale web application, with the purpose \n                  of handling and managing data on the site. \n                  The web application was connected to Hitta.se's backend`;\n  }\n\n  return (\n    <SortElement>\n      <HeaderStack>{CurrentStack}</HeaderStack>\n\n      <StackUL>\n        <ListItem\n          item=\"java\"\n          onMouseEnter={() => setCurrentStack(\"Java\")}\n          onMouseLeave={() => setCurrentStack(\"Technologies\")}\n        >\n          {\" \"}\n          <FontAwesomeIcon\n            icon={[\"fab\", \"java\"]}\n            style={{ height: \"30px\", width: \"30px\" }}\n          />\n        </ListItem>\n        <ListItem\n          item=\"js\"\n          onMouseEnter={() => setCurrentStack(\"Javascript\")}\n          onMouseLeave={() => setCurrentStack(\"Technologies\")}\n        >\n          {\" \"}\n          <FontAwesomeIcon\n            icon={[\"fab\", \"js\"]}\n            style={{ height: \"30px\", width: \"30px\" }}\n          />\n        </ListItem>\n        <ListItem\n          item=\"react\"\n          onMouseEnter={() => setCurrentStack(\"React\")}\n          onMouseLeave={() => setCurrentStack(\"Technologies\")}\n        >\n          {\" \"}\n          <FontAwesomeIcon\n            icon={[\"fab\", \"react\"]}\n            style={{ height: \"30px\", width: \"30px\" }}\n          />\n        </ListItem>\n        <ListItem\n          item=\"node\"\n          onMouseEnter={() => setCurrentStack(\"Node.js\")}\n          onMouseLeave={() => setCurrentStack(\"Technologies\")}\n        >\n          <FontAwesomeIcon\n            icon={[\"fab\", \"node\"]}\n            style={{ height: \"30px\", width: \"30px\" }}\n          />\n        </ListItem>\n\n        <ListItem\n          item=\"html\"\n          onMouseEnter={() => setCurrentStack(\"HTML\")}\n          onMouseLeave={() => setCurrentStack(\"Technologies\")}\n        >\n          {\" \"}\n          <FontAwesomeIcon\n            icon={[\"fab\", \"html5\"]}\n            style={{ height: \"30px\", width: \"30px\" }}\n          />\n        </ListItem>\n        <ListItem\n          item=\"css\"\n          onMouseEnter={() => setCurrentStack(\"CSS\")}\n          onMouseLeave={() => setCurrentStack(\"Technologies\")}\n        >\n          <FontAwesomeIcon\n            icon={[\"fab\", \"css3\"]}\n            style={{ height: \"30px\", width: \"30px\" }}\n          />\n        </ListItem>\n      </StackUL>\n      <Paragraph>{returnText}</Paragraph>\n      <FakeComponent></FakeComponent>\n    </SortElement>\n  );\n};\nexport default TechStack;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled from \"styled-components\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ParticleAnimation from \"react-particle-animation\";\nimport Myheader from \"./components/headerName\";\nimport TechStack from \"./components/TechStack\";\n\nconst App = props => {\n  let OrganizeComponents = styled.div``;\n  const FixFooter = styled.div`\n    text-align: center;\n    bottom: 10%;\n    width: 100%;\n    position: relative;\n\n    @media (max-width: 768px) {\n      position: relative;\n    }\n  `;\n\n  return (\n    <div>\n      <OrganizeComponents>\n        <Myheader></Myheader>\n        <FixFooter>\n          <TechStack></TechStack>\n        </FixFooter>\n      </OrganizeComponents>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Me.fa868f04.png\";"],"sourceRoot":""}